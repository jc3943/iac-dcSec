---
- hosts: localhost
  name: Deploy an ubuntu ova to an ESXi Host
  gather_facts: false
  vars: 
    esxi_username: 'root'
    esxi_password: 'DEVP@ssw0rd'
    esxi_host: '172.16.115.11'
    vcenter_hostname: '172.16.14.137'
    vcenter_password: 'DEVP@ssw0rd'
    vcsa_user: 'administrator@vsphere.local'
    vcsa_pw: 'DEVP@ssw0rd'
    domain: 'thor.iws.navy.mil'
    pubkey: 'ecdsa-sha2-nistp521 AAAAE2VjZHNhLXNoYTItbmlzdHA1MjEAAAAIbmlzdHA1MjEAAACFBACmlZI97WQ8CGCKP6dypiTcCudqSN1QWEUTPZkKl37AvAwLS1cvlVBSMixyrPrPB4/zQlw9RKiW5ihtckik2jG2/AE6dX7J+fHzHh2QL08D45T3qFm82XSevKXn+ntWsHttpCcg/KVOftsLj52/2H5Xs084H9hPjd86mJIvIr+p3YxSog== dcloud@dcloud'
    searchpath: "thor.iws.navy.mil"
    datastore: 'sandbox'
    datacenter: 'sandbox'
    cluster: 'sandbox'
    #networks: 'Storage Controller Management Network'
    ubuntu_ova_name: jammy-server-cloudimg-amd64.ova
    ubuntu_ova_file: '/tmp/{{ ubuntu_ova_name }}'
    nfs_file_browser_url: "http://172.16.10.124:8005"
    nfs_file_browser_user: "admin"
    nfs_file_browser_password: "admin"
    nfs_file_url: '/api/raw/00-Software/utils/{{ ubuntu_ova_name }}'

  tasks:

  - name: Authenticate to the nfs file browser
    uri:
      url: '{{ nfs_file_browser_url }}/api/login'
      method: POST
      body_format: json
      body: '{"username":"{{ nfs_file_browser_user }}","password":"{{ nfs_file_browser_password }}","recaptcha":""}'
      headers:
        Content-Type: "application/json"
        Accept: "application/json"
      return_content: yes
      validate_certs: no
      status_code: 200, -1
    register: auth_res

  - name: Download the file
    get_url:
      url: '{{ nfs_file_browser_url }}/api/raw/00-Software/utils/{{ ubuntu_ova_name }}?auth={{ auth_res.content  }}'
      dest: '/tmp/{{ ubuntu_ova_name }}'

  - vmware_deploy_ovf:
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcsa_user }}'
      password: '{{ vcsa_pw }}'
      name: 'ubuntu-TEST_1'
      ovf: '/tmp/jammy-server-cloudimg-amd64.ova' 
      wait_for_ip_address: false
      validate_certs: no
      inject_ovf_env: true
      datastore: '{{ datastore }}'
      datacenter: '{{ datacenter }}'
      cluster: '{{ cluster }}'
      networks: "{u'Network adapter 1':u'{Storage Controller Management Network'}"
    delegate_to: localhost